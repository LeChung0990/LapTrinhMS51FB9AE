                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.0 #14184 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _u8Data
                                     12 	.globl _main
                                     13 	.globl _Read_APROM_BYTE
                                     14 	.globl _UART0_NUMBER
                                     15 	.globl _UART0_STRING
                                     16 	.globl _UART_Open
                                     17 	.globl _DelayT0
                                     18 	.globl _DelayT0_Init
                                     19 	.globl _MOSI
                                     20 	.globl _P00
                                     21 	.globl _MISO
                                     22 	.globl _P01
                                     23 	.globl _RXD_1
                                     24 	.globl _P02
                                     25 	.globl _P03
                                     26 	.globl _STADC
                                     27 	.globl _P04
                                     28 	.globl _P05
                                     29 	.globl _TXD
                                     30 	.globl _P06
                                     31 	.globl _RXD
                                     32 	.globl _P07
                                     33 	.globl _IT0
                                     34 	.globl _IE0
                                     35 	.globl _IT1
                                     36 	.globl _IE1
                                     37 	.globl _TR0
                                     38 	.globl _TF0
                                     39 	.globl _TR1
                                     40 	.globl _TF1
                                     41 	.globl _P10
                                     42 	.globl _P11
                                     43 	.globl _P12
                                     44 	.globl _SCL
                                     45 	.globl _P13
                                     46 	.globl _SDA
                                     47 	.globl _P14
                                     48 	.globl _P15
                                     49 	.globl _TXD_1
                                     50 	.globl _P16
                                     51 	.globl _P17
                                     52 	.globl _RI
                                     53 	.globl _TI
                                     54 	.globl _RB8
                                     55 	.globl _TB8
                                     56 	.globl _REN
                                     57 	.globl _SM2
                                     58 	.globl _SM1
                                     59 	.globl _FE
                                     60 	.globl _SM0
                                     61 	.globl _P20
                                     62 	.globl _EX0
                                     63 	.globl _ET0
                                     64 	.globl _EX1
                                     65 	.globl _ET1
                                     66 	.globl _ES
                                     67 	.globl _EBOD
                                     68 	.globl _EADC
                                     69 	.globl _EA
                                     70 	.globl _P30
                                     71 	.globl _PX0
                                     72 	.globl _PT0
                                     73 	.globl _PX1
                                     74 	.globl _PT1
                                     75 	.globl _PS
                                     76 	.globl _PBOD
                                     77 	.globl _PADC
                                     78 	.globl _I2CPX
                                     79 	.globl _AA
                                     80 	.globl _SI
                                     81 	.globl _STO
                                     82 	.globl _STA
                                     83 	.globl _I2CEN
                                     84 	.globl _CM_RL2
                                     85 	.globl _TR2
                                     86 	.globl _TF2
                                     87 	.globl _P
                                     88 	.globl _OV
                                     89 	.globl _RS0
                                     90 	.globl _RS1
                                     91 	.globl _F0
                                     92 	.globl _AC
                                     93 	.globl _CY
                                     94 	.globl _CLRPWM
                                     95 	.globl _PWMF
                                     96 	.globl _LOAD
                                     97 	.globl _PWMRUN
                                     98 	.globl _ADCHS0
                                     99 	.globl _ADCHS1
                                    100 	.globl _ADCHS2
                                    101 	.globl _ADCHS3
                                    102 	.globl _ETGSEL0
                                    103 	.globl _ETGSEL1
                                    104 	.globl _ADCS
                                    105 	.globl _ADCF
                                    106 	.globl _RI_1
                                    107 	.globl _TI_1
                                    108 	.globl _RB8_1
                                    109 	.globl _TB8_1
                                    110 	.globl _REN_1
                                    111 	.globl _SM2_1
                                    112 	.globl _SM1_1
                                    113 	.globl _FE_1
                                    114 	.globl _SM0_1
                                    115 	.globl _EIPH1
                                    116 	.globl _EIP1
                                    117 	.globl _PMD
                                    118 	.globl _PMEN
                                    119 	.globl _PDTCNT
                                    120 	.globl _PDTEN
                                    121 	.globl _SCON_1
                                    122 	.globl _EIPH
                                    123 	.globl _AINDIDS
                                    124 	.globl _SPDR
                                    125 	.globl _SPSR
                                    126 	.globl _SPCR2
                                    127 	.globl _SPCR
                                    128 	.globl _CAPCON4
                                    129 	.globl _CAPCON3
                                    130 	.globl _B
                                    131 	.globl _EIP
                                    132 	.globl _C2H
                                    133 	.globl _C2L
                                    134 	.globl _PIF
                                    135 	.globl _PIPEN
                                    136 	.globl _PINEN
                                    137 	.globl _PICON
                                    138 	.globl _ADCCON0
                                    139 	.globl _C1H
                                    140 	.globl _C1L
                                    141 	.globl _C0H
                                    142 	.globl _C0L
                                    143 	.globl _ADCDLY
                                    144 	.globl _ADCCON2
                                    145 	.globl _ADCCON1
                                    146 	.globl _ACC
                                    147 	.globl _PWMCON1
                                    148 	.globl _PIOCON0
                                    149 	.globl _PWM3L
                                    150 	.globl _PWM2L
                                    151 	.globl _PWM1L
                                    152 	.globl _PWM0L
                                    153 	.globl _PWMPL
                                    154 	.globl _PWMCON0
                                    155 	.globl _FBD
                                    156 	.globl _PNP
                                    157 	.globl _PWM3H
                                    158 	.globl _PWM2H
                                    159 	.globl _PWM1H
                                    160 	.globl _PWM0H
                                    161 	.globl _PWMPH
                                    162 	.globl _PSW
                                    163 	.globl _ADCMPH
                                    164 	.globl _ADCMPL
                                    165 	.globl _PWM5L
                                    166 	.globl _TH2
                                    167 	.globl _PWM4L
                                    168 	.globl _TL2
                                    169 	.globl _RCMP2H
                                    170 	.globl _RCMP2L
                                    171 	.globl _T2MOD
                                    172 	.globl _T2CON
                                    173 	.globl _TA
                                    174 	.globl _PIOCON1
                                    175 	.globl _RH3
                                    176 	.globl _PWM5H
                                    177 	.globl _RL3
                                    178 	.globl _PWM4H
                                    179 	.globl _T3CON
                                    180 	.globl _ADCRH
                                    181 	.globl _ADCRL
                                    182 	.globl _I2ADDR
                                    183 	.globl _I2CON
                                    184 	.globl _I2TOC
                                    185 	.globl _I2CLK
                                    186 	.globl _I2STAT
                                    187 	.globl _I2DAT
                                    188 	.globl _SADDR_1
                                    189 	.globl _SADEN_1
                                    190 	.globl _SADEN
                                    191 	.globl _IP
                                    192 	.globl _PWMINTC
                                    193 	.globl _IPH
                                    194 	.globl _P2S
                                    195 	.globl _P1SR
                                    196 	.globl _P1M2
                                    197 	.globl _P1S
                                    198 	.globl _P1M1
                                    199 	.globl _P0SR
                                    200 	.globl _P0M2
                                    201 	.globl _P0S
                                    202 	.globl _P0M1
                                    203 	.globl _P3
                                    204 	.globl _IAPCN
                                    205 	.globl _IAPFD
                                    206 	.globl _P3SR
                                    207 	.globl _P3M2
                                    208 	.globl _P3S
                                    209 	.globl _P3M1
                                    210 	.globl _BODCON1
                                    211 	.globl _WDCON
                                    212 	.globl _SADDR
                                    213 	.globl _IE
                                    214 	.globl _IAPAH
                                    215 	.globl _IAPAL
                                    216 	.globl _IAPUEN
                                    217 	.globl _IAPTRG
                                    218 	.globl _BODCON0
                                    219 	.globl _AUXR1
                                    220 	.globl _P2
                                    221 	.globl _CHPCON
                                    222 	.globl _EIE1
                                    223 	.globl _EIE
                                    224 	.globl _SBUF_1
                                    225 	.globl _SBUF
                                    226 	.globl _SCON
                                    227 	.globl _CKEN
                                    228 	.globl _CKSWT
                                    229 	.globl _CKDIV
                                    230 	.globl _CAPCON2
                                    231 	.globl _CAPCON1
                                    232 	.globl _CAPCON0
                                    233 	.globl _SFRS
                                    234 	.globl _P1
                                    235 	.globl _WKCON
                                    236 	.globl _CKCON
                                    237 	.globl _TH1
                                    238 	.globl _TH0
                                    239 	.globl _TL1
                                    240 	.globl _TL0
                                    241 	.globl _TMOD
                                    242 	.globl _TCON
                                    243 	.globl _PCON
                                    244 	.globl _RWK
                                    245 	.globl _RCTRIM1
                                    246 	.globl _RCTRIM0
                                    247 	.globl _DPH
                                    248 	.globl _DPL
                                    249 	.globl _SP
                                    250 	.globl _P0
                                    251 	.globl _BIT_TMP
                                    252 	.globl _Write_DATAFLASH_BYTE_PARM_2
                                    253 	.globl _page_buffer
                                    254 	.globl _Result
                                    255 	.globl _number
                                    256 	.globl _Write_DATAFLASH_BYTE
                                    257 ;--------------------------------------------------------
                                    258 ; special function registers
                                    259 ;--------------------------------------------------------
                                    260 	.area RSEG    (ABS,DATA)
      000000                        261 	.org 0x0000
                           000080   262 _P0	=	0x0080
                           000081   263 _SP	=	0x0081
                           000082   264 _DPL	=	0x0082
                           000083   265 _DPH	=	0x0083
                           000084   266 _RCTRIM0	=	0x0084
                           000085   267 _RCTRIM1	=	0x0085
                           000086   268 _RWK	=	0x0086
                           000087   269 _PCON	=	0x0087
                           000088   270 _TCON	=	0x0088
                           000089   271 _TMOD	=	0x0089
                           00008A   272 _TL0	=	0x008a
                           00008B   273 _TL1	=	0x008b
                           00008C   274 _TH0	=	0x008c
                           00008D   275 _TH1	=	0x008d
                           00008E   276 _CKCON	=	0x008e
                           00008F   277 _WKCON	=	0x008f
                           000090   278 _P1	=	0x0090
                           000091   279 _SFRS	=	0x0091
                           000092   280 _CAPCON0	=	0x0092
                           000093   281 _CAPCON1	=	0x0093
                           000094   282 _CAPCON2	=	0x0094
                           000095   283 _CKDIV	=	0x0095
                           000096   284 _CKSWT	=	0x0096
                           000097   285 _CKEN	=	0x0097
                           000098   286 _SCON	=	0x0098
                           000099   287 _SBUF	=	0x0099
                           00009A   288 _SBUF_1	=	0x009a
                           00009B   289 _EIE	=	0x009b
                           00009C   290 _EIE1	=	0x009c
                           00009F   291 _CHPCON	=	0x009f
                           0000A0   292 _P2	=	0x00a0
                           0000A2   293 _AUXR1	=	0x00a2
                           0000A3   294 _BODCON0	=	0x00a3
                           0000A4   295 _IAPTRG	=	0x00a4
                           0000A5   296 _IAPUEN	=	0x00a5
                           0000A6   297 _IAPAL	=	0x00a6
                           0000A7   298 _IAPAH	=	0x00a7
                           0000A8   299 _IE	=	0x00a8
                           0000A9   300 _SADDR	=	0x00a9
                           0000AA   301 _WDCON	=	0x00aa
                           0000AB   302 _BODCON1	=	0x00ab
                           0000AC   303 _P3M1	=	0x00ac
                           0000AC   304 _P3S	=	0x00ac
                           0000AD   305 _P3M2	=	0x00ad
                           0000AD   306 _P3SR	=	0x00ad
                           0000AE   307 _IAPFD	=	0x00ae
                           0000AF   308 _IAPCN	=	0x00af
                           0000B0   309 _P3	=	0x00b0
                           0000B1   310 _P0M1	=	0x00b1
                           0000B1   311 _P0S	=	0x00b1
                           0000B2   312 _P0M2	=	0x00b2
                           0000B2   313 _P0SR	=	0x00b2
                           0000B3   314 _P1M1	=	0x00b3
                           0000B3   315 _P1S	=	0x00b3
                           0000B4   316 _P1M2	=	0x00b4
                           0000B4   317 _P1SR	=	0x00b4
                           0000B5   318 _P2S	=	0x00b5
                           0000B7   319 _IPH	=	0x00b7
                           0000B7   320 _PWMINTC	=	0x00b7
                           0000B8   321 _IP	=	0x00b8
                           0000B9   322 _SADEN	=	0x00b9
                           0000BA   323 _SADEN_1	=	0x00ba
                           0000BB   324 _SADDR_1	=	0x00bb
                           0000BC   325 _I2DAT	=	0x00bc
                           0000BD   326 _I2STAT	=	0x00bd
                           0000BE   327 _I2CLK	=	0x00be
                           0000BF   328 _I2TOC	=	0x00bf
                           0000C0   329 _I2CON	=	0x00c0
                           0000C1   330 _I2ADDR	=	0x00c1
                           0000C2   331 _ADCRL	=	0x00c2
                           0000C3   332 _ADCRH	=	0x00c3
                           0000C4   333 _T3CON	=	0x00c4
                           0000C4   334 _PWM4H	=	0x00c4
                           0000C5   335 _RL3	=	0x00c5
                           0000C5   336 _PWM5H	=	0x00c5
                           0000C6   337 _RH3	=	0x00c6
                           0000C6   338 _PIOCON1	=	0x00c6
                           0000C7   339 _TA	=	0x00c7
                           0000C8   340 _T2CON	=	0x00c8
                           0000C9   341 _T2MOD	=	0x00c9
                           0000CA   342 _RCMP2L	=	0x00ca
                           0000CB   343 _RCMP2H	=	0x00cb
                           0000CC   344 _TL2	=	0x00cc
                           0000CC   345 _PWM4L	=	0x00cc
                           0000CD   346 _TH2	=	0x00cd
                           0000CD   347 _PWM5L	=	0x00cd
                           0000CE   348 _ADCMPL	=	0x00ce
                           0000CF   349 _ADCMPH	=	0x00cf
                           0000D0   350 _PSW	=	0x00d0
                           0000D1   351 _PWMPH	=	0x00d1
                           0000D2   352 _PWM0H	=	0x00d2
                           0000D3   353 _PWM1H	=	0x00d3
                           0000D4   354 _PWM2H	=	0x00d4
                           0000D5   355 _PWM3H	=	0x00d5
                           0000D6   356 _PNP	=	0x00d6
                           0000D7   357 _FBD	=	0x00d7
                           0000D8   358 _PWMCON0	=	0x00d8
                           0000D9   359 _PWMPL	=	0x00d9
                           0000DA   360 _PWM0L	=	0x00da
                           0000DB   361 _PWM1L	=	0x00db
                           0000DC   362 _PWM2L	=	0x00dc
                           0000DD   363 _PWM3L	=	0x00dd
                           0000DE   364 _PIOCON0	=	0x00de
                           0000DF   365 _PWMCON1	=	0x00df
                           0000E0   366 _ACC	=	0x00e0
                           0000E1   367 _ADCCON1	=	0x00e1
                           0000E2   368 _ADCCON2	=	0x00e2
                           0000E3   369 _ADCDLY	=	0x00e3
                           0000E4   370 _C0L	=	0x00e4
                           0000E5   371 _C0H	=	0x00e5
                           0000E6   372 _C1L	=	0x00e6
                           0000E7   373 _C1H	=	0x00e7
                           0000E8   374 _ADCCON0	=	0x00e8
                           0000E9   375 _PICON	=	0x00e9
                           0000EA   376 _PINEN	=	0x00ea
                           0000EB   377 _PIPEN	=	0x00eb
                           0000EC   378 _PIF	=	0x00ec
                           0000ED   379 _C2L	=	0x00ed
                           0000EE   380 _C2H	=	0x00ee
                           0000EF   381 _EIP	=	0x00ef
                           0000F0   382 _B	=	0x00f0
                           0000F1   383 _CAPCON3	=	0x00f1
                           0000F2   384 _CAPCON4	=	0x00f2
                           0000F3   385 _SPCR	=	0x00f3
                           0000F3   386 _SPCR2	=	0x00f3
                           0000F4   387 _SPSR	=	0x00f4
                           0000F5   388 _SPDR	=	0x00f5
                           0000F6   389 _AINDIDS	=	0x00f6
                           0000F7   390 _EIPH	=	0x00f7
                           0000F8   391 _SCON_1	=	0x00f8
                           0000F9   392 _PDTEN	=	0x00f9
                           0000FA   393 _PDTCNT	=	0x00fa
                           0000FB   394 _PMEN	=	0x00fb
                           0000FC   395 _PMD	=	0x00fc
                           0000FE   396 _EIP1	=	0x00fe
                           0000FF   397 _EIPH1	=	0x00ff
                                    398 ;--------------------------------------------------------
                                    399 ; special function bits
                                    400 ;--------------------------------------------------------
                                    401 	.area RSEG    (ABS,DATA)
      000000                        402 	.org 0x0000
                           0000FF   403 _SM0_1	=	0x00ff
                           0000FF   404 _FE_1	=	0x00ff
                           0000FE   405 _SM1_1	=	0x00fe
                           0000FD   406 _SM2_1	=	0x00fd
                           0000FC   407 _REN_1	=	0x00fc
                           0000FB   408 _TB8_1	=	0x00fb
                           0000FA   409 _RB8_1	=	0x00fa
                           0000F9   410 _TI_1	=	0x00f9
                           0000F8   411 _RI_1	=	0x00f8
                           0000EF   412 _ADCF	=	0x00ef
                           0000EE   413 _ADCS	=	0x00ee
                           0000ED   414 _ETGSEL1	=	0x00ed
                           0000EC   415 _ETGSEL0	=	0x00ec
                           0000EB   416 _ADCHS3	=	0x00eb
                           0000EA   417 _ADCHS2	=	0x00ea
                           0000E9   418 _ADCHS1	=	0x00e9
                           0000E8   419 _ADCHS0	=	0x00e8
                           0000DF   420 _PWMRUN	=	0x00df
                           0000DE   421 _LOAD	=	0x00de
                           0000DD   422 _PWMF	=	0x00dd
                           0000DC   423 _CLRPWM	=	0x00dc
                           0000D7   424 _CY	=	0x00d7
                           0000D6   425 _AC	=	0x00d6
                           0000D5   426 _F0	=	0x00d5
                           0000D4   427 _RS1	=	0x00d4
                           0000D3   428 _RS0	=	0x00d3
                           0000D2   429 _OV	=	0x00d2
                           0000D0   430 _P	=	0x00d0
                           0000CF   431 _TF2	=	0x00cf
                           0000CA   432 _TR2	=	0x00ca
                           0000C8   433 _CM_RL2	=	0x00c8
                           0000C6   434 _I2CEN	=	0x00c6
                           0000C5   435 _STA	=	0x00c5
                           0000C4   436 _STO	=	0x00c4
                           0000C3   437 _SI	=	0x00c3
                           0000C2   438 _AA	=	0x00c2
                           0000C0   439 _I2CPX	=	0x00c0
                           0000BE   440 _PADC	=	0x00be
                           0000BD   441 _PBOD	=	0x00bd
                           0000BC   442 _PS	=	0x00bc
                           0000BB   443 _PT1	=	0x00bb
                           0000BA   444 _PX1	=	0x00ba
                           0000B9   445 _PT0	=	0x00b9
                           0000B8   446 _PX0	=	0x00b8
                           0000B0   447 _P30	=	0x00b0
                           0000AF   448 _EA	=	0x00af
                           0000AE   449 _EADC	=	0x00ae
                           0000AD   450 _EBOD	=	0x00ad
                           0000AC   451 _ES	=	0x00ac
                           0000AB   452 _ET1	=	0x00ab
                           0000AA   453 _EX1	=	0x00aa
                           0000A9   454 _ET0	=	0x00a9
                           0000A8   455 _EX0	=	0x00a8
                           0000A0   456 _P20	=	0x00a0
                           00009F   457 _SM0	=	0x009f
                           00009F   458 _FE	=	0x009f
                           00009E   459 _SM1	=	0x009e
                           00009D   460 _SM2	=	0x009d
                           00009C   461 _REN	=	0x009c
                           00009B   462 _TB8	=	0x009b
                           00009A   463 _RB8	=	0x009a
                           000099   464 _TI	=	0x0099
                           000098   465 _RI	=	0x0098
                           000097   466 _P17	=	0x0097
                           000096   467 _P16	=	0x0096
                           000096   468 _TXD_1	=	0x0096
                           000095   469 _P15	=	0x0095
                           000094   470 _P14	=	0x0094
                           000094   471 _SDA	=	0x0094
                           000093   472 _P13	=	0x0093
                           000093   473 _SCL	=	0x0093
                           000092   474 _P12	=	0x0092
                           000091   475 _P11	=	0x0091
                           000090   476 _P10	=	0x0090
                           00008F   477 _TF1	=	0x008f
                           00008E   478 _TR1	=	0x008e
                           00008D   479 _TF0	=	0x008d
                           00008C   480 _TR0	=	0x008c
                           00008B   481 _IE1	=	0x008b
                           00008A   482 _IT1	=	0x008a
                           000089   483 _IE0	=	0x0089
                           000088   484 _IT0	=	0x0088
                           000087   485 _P07	=	0x0087
                           000087   486 _RXD	=	0x0087
                           000086   487 _P06	=	0x0086
                           000086   488 _TXD	=	0x0086
                           000085   489 _P05	=	0x0085
                           000084   490 _P04	=	0x0084
                           000084   491 _STADC	=	0x0084
                           000083   492 _P03	=	0x0083
                           000082   493 _P02	=	0x0082
                           000082   494 _RXD_1	=	0x0082
                           000081   495 _P01	=	0x0081
                           000081   496 _MISO	=	0x0081
                           000080   497 _P00	=	0x0080
                           000080   498 _MOSI	=	0x0080
                                    499 ;--------------------------------------------------------
                                    500 ; overlayable register banks
                                    501 ;--------------------------------------------------------
                                    502 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        503 	.ds 8
                                    504 ;--------------------------------------------------------
                                    505 ; internal ram data
                                    506 ;--------------------------------------------------------
                                    507 	.area DSEG    (DATA)
      000000                        508 _number::
      000000                        509 	.ds 1
      000001                        510 _Result::
      000001                        511 	.ds 1
      000002                        512 _page_buffer::
      000002                        513 	.ds 64
      000042                        514 _Write_DATAFLASH_BYTE_PARM_2:
      000042                        515 	.ds 1
      000043                        516 _Write_DATAFLASH_BYTE_u16EPAddr_65536_18:
      000043                        517 	.ds 2
                                    518 ;--------------------------------------------------------
                                    519 ; overlayable items in internal ram
                                    520 ;--------------------------------------------------------
                                    521 	.area	OSEG    (OVR,DATA)
                                    522 ;--------------------------------------------------------
                                    523 ; Stack segment in internal ram
                                    524 ;--------------------------------------------------------
                                    525 	.area SSEG
      000000                        526 __start__stack:
      000000                        527 	.ds	1
                                    528 
                                    529 ;--------------------------------------------------------
                                    530 ; indirectly addressable internal ram data
                                    531 ;--------------------------------------------------------
                                    532 	.area ISEG    (DATA)
                                    533 ;--------------------------------------------------------
                                    534 ; absolute internal ram data
                                    535 ;--------------------------------------------------------
                                    536 	.area IABS    (ABS,DATA)
                                    537 	.area IABS    (ABS,DATA)
                                    538 ;--------------------------------------------------------
                                    539 ; bit data
                                    540 ;--------------------------------------------------------
                                    541 	.area BSEG    (BIT)
      000000                        542 _BIT_TMP::
      000000                        543 	.ds 1
                                    544 ;--------------------------------------------------------
                                    545 ; paged external ram data
                                    546 ;--------------------------------------------------------
                                    547 	.area PSEG    (PAG,XDATA)
                                    548 ;--------------------------------------------------------
                                    549 ; uninitialized external ram data
                                    550 ;--------------------------------------------------------
                                    551 	.area XSEG    (XDATA)
                                    552 ;--------------------------------------------------------
                                    553 ; absolute external ram data
                                    554 ;--------------------------------------------------------
                                    555 	.area XABS    (ABS,XDATA)
                                    556 ;--------------------------------------------------------
                                    557 ; initialized external ram data
                                    558 ;--------------------------------------------------------
                                    559 	.area XISEG   (XDATA)
                                    560 	.area HOME    (CODE)
                                    561 	.area GSINIT0 (CODE)
                                    562 	.area GSINIT1 (CODE)
                                    563 	.area GSINIT2 (CODE)
                                    564 	.area GSINIT3 (CODE)
                                    565 	.area GSINIT4 (CODE)
                                    566 	.area GSINIT5 (CODE)
                                    567 	.area GSINIT  (CODE)
                                    568 	.area GSFINAL (CODE)
                                    569 	.area CSEG    (CODE)
                                    570 ;--------------------------------------------------------
                                    571 ; interrupt vector
                                    572 ;--------------------------------------------------------
                                    573 	.area HOME    (CODE)
      000000                        574 __interrupt_vect:
      000000 02r00r00         [24]  575 	ljmp	__sdcc_gsinit_startup
                                    576 ;--------------------------------------------------------
                                    577 ; global & static initialisations
                                    578 ;--------------------------------------------------------
                                    579 	.area HOME    (CODE)
                                    580 	.area GSINIT  (CODE)
                                    581 	.area GSFINAL (CODE)
                                    582 	.area GSINIT  (CODE)
                                    583 	.globl __sdcc_gsinit_startup
                                    584 	.globl __sdcc_program_startup
                                    585 	.globl __start__stack
                                    586 	.globl __mcs51_genXINIT
                                    587 	.globl __mcs51_genXRAMCLEAR
                                    588 	.globl __mcs51_genRAMCLEAR
                                    589 ;	main.c:13: uint8_t number= 0x34;
      000000 75*00 34         [24]  590 	mov	_number,#0x34
                                    591 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  592 	ljmp	__sdcc_program_startup
                                    593 ;--------------------------------------------------------
                                    594 ; Home
                                    595 ;--------------------------------------------------------
                                    596 	.area HOME    (CODE)
                                    597 	.area HOME    (CODE)
      000003                        598 __sdcc_program_startup:
      000003 02r00r08         [24]  599 	ljmp	_main
                                    600 ;	return from main will return to caller
                                    601 ;--------------------------------------------------------
                                    602 ; code
                                    603 ;--------------------------------------------------------
                                    604 	.area CSEG    (CODE)
                                    605 ;------------------------------------------------------------
                                    606 ;Allocation info for local variables in function 'Read_APROM_BYTE'
                                    607 ;------------------------------------------------------------
                                    608 ;u16_addr                  Allocated to registers r6 r7 
                                    609 ;rdata                     Allocated to registers 
                                    610 ;------------------------------------------------------------
                                    611 ;	main.c:20: unsigned char Read_APROM_BYTE(unsigned int __code* u16_addr)
                                    612 ;	-----------------------------------------
                                    613 ;	 function Read_APROM_BYTE
                                    614 ;	-----------------------------------------
      000000                        615 _Read_APROM_BYTE:
                           000007   616 	ar7 = 0x07
                           000006   617 	ar6 = 0x06
                           000005   618 	ar5 = 0x05
                           000004   619 	ar4 = 0x04
                           000003   620 	ar3 = 0x03
                           000002   621 	ar2 = 0x02
                           000001   622 	ar1 = 0x01
                           000000   623 	ar0 = 0x00
                                    624 ;	main.c:23: rdata = *u16_addr >> 8;
      000000 E4               [12]  625 	clr	a
      000001 93               [24]  626 	movc	a,@a+dptr
      000002 A3               [24]  627 	inc	dptr
      000003 E4               [12]  628 	clr	a
      000004 93               [24]  629 	movc	a,@a+dptr
                                    630 ;	main.c:24: return rdata;
                                    631 ;	main.c:25: }
      000005 F5 82            [12]  632 	mov	dpl,a
      000007 22               [24]  633 	ret
                                    634 ;------------------------------------------------------------
                                    635 ;Allocation info for local variables in function 'main'
                                    636 ;------------------------------------------------------------
                                    637 ;	main.c:26: void main(void)
                                    638 ;	-----------------------------------------
                                    639 ;	 function main
                                    640 ;	-----------------------------------------
      000008                        641 _main:
                                    642 ;	main.c:78: UART_Open(UART0_Timer3, BAUD9600);
      000008 75*00 CC         [24]  643 	mov	_UART_Open_PARM_2,#0xcc
      00000B 75*01 FF         [24]  644 	mov	(_UART_Open_PARM_2 + 1),#0xff
      00000E 75 82 01         [24]  645 	mov	dpl,#0x01
      000011 12r00r00         [24]  646 	lcall	_UART_Open
                                    647 ;	main.c:79: DelayT0_Init();
      000014 12r00r00         [24]  648 	lcall	_DelayT0_Init
                                    649 ;	main.c:80: UART0_STRING("Start:");
      000017 90r00r01         [24]  650 	mov	dptr,#___str_0
      00001A 75 F0 80         [24]  651 	mov	b,#0x80
      00001D 12r00r00         [24]  652 	lcall	_UART0_STRING
                                    653 ;	main.c:84: while (1)
      000020                        654 00102$:
                                    655 ;	main.c:86: number = Read_APROM_BYTE(0x200);
      000020 90 02 00         [24]  656 	mov	dptr,#0x0200
      000023 12r00r00         [24]  657 	lcall	_Read_APROM_BYTE
      000026 85 82*00         [24]  658 	mov	_number,dpl
                                    659 ;	main.c:87: UART0_NUMBER(number);
      000029 AE*00            [24]  660 	mov	r6,_number
      00002B 7F 00            [12]  661 	mov	r7,#0x00
      00002D 8E 82            [24]  662 	mov	dpl,r6
      00002F 8F 83            [24]  663 	mov	dph,r7
      000031 12r00r00         [24]  664 	lcall	_UART0_NUMBER
                                    665 ;	main.c:96: DelayT0(1000, CONFIG_1MS);
      000034 75*00 E8         [24]  666 	mov	_DelayT0_PARM_2,#0xe8
      000037 75*01 03         [24]  667 	mov	(_DelayT0_PARM_2 + 1),#0x03
      00003A 90 03 E8         [24]  668 	mov	dptr,#0x03e8
      00003D 12r00r00         [24]  669 	lcall	_DelayT0
                                    670 ;	main.c:98: }
      000040 80 DE            [24]  671 	sjmp	00102$
                                    672 ;------------------------------------------------------------
                                    673 ;Allocation info for local variables in function 'Write_DATAFLASH_BYTE'
                                    674 ;------------------------------------------------------------
                                    675 ;u8EPData                  Allocated with name '_Write_DATAFLASH_BYTE_PARM_2'
                                    676 ;u16EPAddr                 Allocated with name '_Write_DATAFLASH_BYTE_u16EPAddr_65536_18'
                                    677 ;looptmp                   Allocated to registers r3 
                                    678 ;u16_addrl_r               Allocated to registers r4 r5 
                                    679 ;RAMtmp                    Allocated to registers 
                                    680 ;------------------------------------------------------------
                                    681 ;	main.c:101: void Write_DATAFLASH_BYTE(unsigned int u16EPAddr,unsigned char u8EPData)
                                    682 ;	-----------------------------------------
                                    683 ;	 function Write_DATAFLASH_BYTE
                                    684 ;	-----------------------------------------
      000042                        685 _Write_DATAFLASH_BYTE:
      000042 85 82*43         [24]  686 	mov	_Write_DATAFLASH_BYTE_u16EPAddr_65536_18,dpl
      000045 85 83*44         [24]  687 	mov	(_Write_DATAFLASH_BYTE_u16EPAddr_65536_18 + 1),dph
                                    688 ;	main.c:108: u16_addrl_r=(u16EPAddr/128)*128;
      000048 AC*43            [24]  689 	mov	r4,_Write_DATAFLASH_BYTE_u16EPAddr_65536_18
      00004A E5*44            [12]  690 	mov	a,(_Write_DATAFLASH_BYTE_u16EPAddr_65536_18 + 1)
      00004C A2 E7            [12]  691 	mov	c,acc.7
      00004E CC               [12]  692 	xch	a,r4
      00004F 33               [12]  693 	rlc	a
      000050 CC               [12]  694 	xch	a,r4
      000051 33               [12]  695 	rlc	a
      000052 CC               [12]  696 	xch	a,r4
      000053 54 01            [12]  697 	anl	a,#(0x01&0x01)
      000055 A2 E0            [12]  698 	mov	c,acc.0
      000057 CC               [12]  699 	xch	a,r4
      000058 13               [12]  700 	rrc	a
      000059 CC               [12]  701 	xch	a,r4
      00005A 13               [12]  702 	rrc	a
      00005B CC               [12]  703 	xch	a,r4
      00005C FD               [12]  704 	mov	r5,a
                                    705 ;	main.c:110: for(looptmp=0;looptmp<0x80;looptmp++)
      00005D 7B 00            [12]  706 	mov	r3,#0x00
      00005F                        707 00103$:
                                    708 ;	main.c:112: RAMtmp = Read_APROM_BYTE((uint16_t  __code*) (u16_addrl_r+looptmp));
      00005F 8B 02            [24]  709 	mov	ar2,r3
      000061 7F 00            [12]  710 	mov	r7,#0x00
      000063 EA               [12]  711 	mov	a,r2
      000064 2C               [12]  712 	add	a,r4
      000065 FA               [12]  713 	mov	r2,a
      000066 EF               [12]  714 	mov	a,r7
      000067 3D               [12]  715 	addc	a,r5
      000068 FF               [12]  716 	mov	r7,a
      000069 8A 82            [24]  717 	mov	dpl,r2
      00006B 8F 83            [24]  718 	mov	dph,r7
      00006D C0 05            [24]  719 	push	ar5
      00006F C0 04            [24]  720 	push	ar4
      000071 C0 03            [24]  721 	push	ar3
      000073 12r00r00         [24]  722 	lcall	_Read_APROM_BYTE
      000076 AF 82            [24]  723 	mov	r7,dpl
      000078 D0 03            [24]  724 	pop	ar3
      00007A D0 04            [24]  725 	pop	ar4
      00007C D0 05            [24]  726 	pop	ar5
                                    727 ;	main.c:113: page_buffer[looptmp]=RAMtmp;
      00007E EB               [12]  728 	mov	a,r3
      00007F 24r02            [12]  729 	add	a,#_page_buffer
      000081 F8               [12]  730 	mov	r0,a
      000082 A6 07            [24]  731 	mov	@r0,ar7
                                    732 ;	main.c:110: for(looptmp=0;looptmp<0x80;looptmp++)
      000084 0B               [12]  733 	inc	r3
      000085 BB 80 00         [24]  734 	cjne	r3,#0x80,00127$
      000088                        735 00127$:
      000088 40 D5            [24]  736 	jc	00103$
                                    737 ;	main.c:116: page_buffer[u16EPAddr&0x7f] = u8EPData;
      00008A 74 7F            [12]  738 	mov	a,#0x7f
      00008C 55*43            [12]  739 	anl	a,_Write_DATAFLASH_BYTE_u16EPAddr_65536_18
      00008E 24r02            [12]  740 	add	a,#_page_buffer
      000090 F8               [12]  741 	mov	r0,a
      000091 A6*42            [24]  742 	mov	@r0,_Write_DATAFLASH_BYTE_PARM_2
                                    743 ;	main.c:119: IAPAL = u16_addrl_r&0xff;
      000093 8C 07            [24]  744 	mov	ar7,r4
      000095 8F A6            [24]  745 	mov	_IAPAL,r7
                                    746 ;	main.c:120: IAPAH = (u16_addrl_r>>8)&0xff;
      000097 8D 06            [24]  747 	mov	ar6,r5
      000099 8E A7            [24]  748 	mov	_IAPAH,r6
                                    749 ;	main.c:121: IAPFD = 0xFF;
      00009B 75 AE FF         [24]  750 	mov	_IAPFD,#0xff
                                    751 ;	main.c:122: set_CHPCON_IAPEN; 
                                    752 ;	assignBit
      00009E A2 AF            [12]  753 	mov	c,_EA
      0000A0 92*00            [24]  754 	mov	_BIT_TMP,c
                                    755 ;	assignBit
      0000A2 C2 AF            [12]  756 	clr	_EA
      0000A4 75 C7 AA         [24]  757 	mov	_TA,#0xaa
      0000A7 75 C7 55         [24]  758 	mov	_TA,#0x55
      0000AA 43 9F 01         [24]  759 	orl	_CHPCON,#0x01
                                    760 ;	assignBit
      0000AD A2*00            [12]  761 	mov	c,_BIT_TMP
      0000AF 92 AF            [24]  762 	mov	_EA,c
                                    763 ;	main.c:123: set_IAPUEN_APUEN;
                                    764 ;	assignBit
      0000B1 A2 AF            [12]  765 	mov	c,_EA
      0000B3 92*00            [24]  766 	mov	_BIT_TMP,c
                                    767 ;	assignBit
      0000B5 C2 AF            [12]  768 	clr	_EA
      0000B7 75 C7 AA         [24]  769 	mov	_TA,#0xaa
      0000BA 75 C7 55         [24]  770 	mov	_TA,#0x55
      0000BD 43 A5 01         [24]  771 	orl	_IAPUEN,#0x01
                                    772 ;	assignBit
      0000C0 A2*00            [12]  773 	mov	c,_BIT_TMP
      0000C2 92 AF            [24]  774 	mov	_EA,c
                                    775 ;	main.c:124: IAPCN = 0x22;     
      0000C4 75 AF 22         [24]  776 	mov	_IAPCN,#0x22
                                    777 ;	main.c:125: set_IAPTRG_IAPGO; 
                                    778 ;	assignBit
      0000C7 A2 AF            [12]  779 	mov	c,_EA
      0000C9 92*00            [24]  780 	mov	_BIT_TMP,c
                                    781 ;	assignBit
      0000CB C2 AF            [12]  782 	clr	_EA
      0000CD 75 C7 AA         [24]  783 	mov	_TA,#0xaa
      0000D0 75 C7 55         [24]  784 	mov	_TA,#0x55
      0000D3 43 A4 01         [24]  785 	orl	_IAPTRG,#0x01
                                    786 ;	assignBit
      0000D6 A2*00            [12]  787 	mov	c,_BIT_TMP
      0000D8 92 AF            [24]  788 	mov	_EA,c
                                    789 ;	main.c:128: set_CHPCON_IAPEN; 
                                    790 ;	assignBit
      0000DA A2 AF            [12]  791 	mov	c,_EA
      0000DC 92*00            [24]  792 	mov	_BIT_TMP,c
                                    793 ;	assignBit
      0000DE C2 AF            [12]  794 	clr	_EA
      0000E0 75 C7 AA         [24]  795 	mov	_TA,#0xaa
      0000E3 75 C7 55         [24]  796 	mov	_TA,#0x55
      0000E6 43 9F 01         [24]  797 	orl	_CHPCON,#0x01
                                    798 ;	assignBit
      0000E9 A2*00            [12]  799 	mov	c,_BIT_TMP
      0000EB 92 AF            [24]  800 	mov	_EA,c
                                    801 ;	main.c:129: set_IAPUEN_APUEN;
                                    802 ;	assignBit
      0000ED A2 AF            [12]  803 	mov	c,_EA
      0000EF 92*00            [24]  804 	mov	_BIT_TMP,c
                                    805 ;	assignBit
      0000F1 C2 AF            [12]  806 	clr	_EA
      0000F3 75 C7 AA         [24]  807 	mov	_TA,#0xaa
      0000F6 75 C7 55         [24]  808 	mov	_TA,#0x55
      0000F9 43 A5 01         [24]  809 	orl	_IAPUEN,#0x01
                                    810 ;	assignBit
      0000FC A2*00            [12]  811 	mov	c,_BIT_TMP
      0000FE 92 AF            [24]  812 	mov	_EA,c
                                    813 ;	main.c:130: IAPCN = 0x21;
      000100 75 AF 21         [24]  814 	mov	_IAPCN,#0x21
                                    815 ;	main.c:131: for(looptmp=0;looptmp<0x80;looptmp++)
      000103 7D 00            [12]  816 	mov	r5,#0x00
      000105                        817 00105$:
                                    818 ;	main.c:133: IAPAL = (u16_addrl_r&0xff)+looptmp;
      000105 ED               [12]  819 	mov	a,r5
      000106 2F               [12]  820 	add	a,r7
      000107 F5 A6            [12]  821 	mov	_IAPAL,a
                                    822 ;	main.c:134: IAPAH = (u16_addrl_r>>8)&0xff;
      000109 8E A7            [24]  823 	mov	_IAPAH,r6
                                    824 ;	main.c:135: IAPFD = page_buffer[looptmp];
      00010B ED               [12]  825 	mov	a,r5
      00010C 24r02            [12]  826 	add	a,#_page_buffer
      00010E F9               [12]  827 	mov	r1,a
      00010F 87 AE            [24]  828 	mov	_IAPFD,@r1
                                    829 ;	main.c:136: set_IAPTRG_IAPGO;      
                                    830 ;	assignBit
      000111 A2 AF            [12]  831 	mov	c,_EA
      000113 92*00            [24]  832 	mov	_BIT_TMP,c
                                    833 ;	assignBit
      000115 C2 AF            [12]  834 	clr	_EA
      000117 75 C7 AA         [24]  835 	mov	_TA,#0xaa
      00011A 75 C7 55         [24]  836 	mov	_TA,#0x55
      00011D 43 A4 01         [24]  837 	orl	_IAPTRG,#0x01
                                    838 ;	assignBit
      000120 A2*00            [12]  839 	mov	c,_BIT_TMP
      000122 92 AF            [24]  840 	mov	_EA,c
                                    841 ;	main.c:131: for(looptmp=0;looptmp<0x80;looptmp++)
      000124 0D               [12]  842 	inc	r5
      000125 BD 80 00         [24]  843 	cjne	r5,#0x80,00129$
      000128                        844 00129$:
      000128 40 DB            [24]  845 	jc	00105$
                                    846 ;	main.c:138: clr_IAPUEN_APUEN;
                                    847 ;	assignBit
      00012A A2 AF            [12]  848 	mov	c,_EA
      00012C 92*00            [24]  849 	mov	_BIT_TMP,c
                                    850 ;	assignBit
      00012E C2 AF            [12]  851 	clr	_EA
      000130 75 C7 AA         [24]  852 	mov	_TA,#0xaa
      000133 75 C7 55         [24]  853 	mov	_TA,#0x55
      000136 53 A5 FE         [24]  854 	anl	_IAPUEN,#0xfe
                                    855 ;	assignBit
      000139 A2*00            [12]  856 	mov	c,_BIT_TMP
      00013B 92 AF            [24]  857 	mov	_EA,c
                                    858 ;	main.c:139: clr_CHPCON_IAPEN;
                                    859 ;	assignBit
      00013D A2 AF            [12]  860 	mov	c,_EA
      00013F 92*00            [24]  861 	mov	_BIT_TMP,c
                                    862 ;	assignBit
      000141 C2 AF            [12]  863 	clr	_EA
      000143 75 C7 AA         [24]  864 	mov	_TA,#0xaa
      000146 75 C7 55         [24]  865 	mov	_TA,#0x55
      000149 53 9F FE         [24]  866 	anl	_CHPCON,#0xfe
                                    867 ;	assignBit
      00014C A2*00            [12]  868 	mov	c,_BIT_TMP
      00014E 92 AF            [24]  869 	mov	_EA,c
                                    870 ;	main.c:140: }  
      000150 22               [24]  871 	ret
                                    872 	.area CSEG    (CODE)
                                    873 	.area CONST   (CODE)
      000000                        874 _u8Data:
      000000 38                     875 	.db #0x38	; 56	'8'
                                    876 	.area CONST   (CODE)
      000001                        877 ___str_0:
      000001 53 74 61 72 74 3A      878 	.ascii "Start:"
      000007 00                     879 	.db 0x00
                                    880 	.area CSEG    (CODE)
                                    881 	.area XINIT   (CODE)
                                    882 	.area CABS    (ABS,CODE)
